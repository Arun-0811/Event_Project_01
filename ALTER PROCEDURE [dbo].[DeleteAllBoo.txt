ALTER PROCEDURE [dbo].[DeleteAllBookedEvents]

AS
BEGIN
    DELETE FROM [AREvent_Project].[dbo].[BookedEvents]
    
END;


ALTER PROCEDURE [dbo].[DeleteBookedEventsByEventId]
    @EventId INT
AS
BEGIN
    DELETE FROM [AREvent_Project].[dbo].[BookedEvents]
    WHERE Event_Id = @EventId;
END;


 ALTER PROCEDURE [dbo].[InsertEnquiry]
    @Name VARCHAR(100),
    @Email VARCHAR(100),
    @Subject VARCHAR(200),
    @Message TEXT
AS
BEGIN
    INSERT INTO Enquiries (Name, Email, Subject, Message)
    VALUES (@Name, @Email, @Subject, @Message)
END


  ALTER PROCEDURE [dbo].[sp_event_create]
    @Event_Name VARCHAR(100),
    @Event_StartDate DATE,
    @Event_EndDate DATE,
    @Event_StartTime TIME,
    @Event_EndTime TIME,
    @Event_location VARCHAR(100),
    @Event_Organizer VARCHAR(100),
    @EventCost_PerPerson DECIMAL(10, 2),
    @GST DECIMAL(10, 2),
    @Conv_Fee DECIMAL(10, 2),
    @Total_Amt DECIMAL(10, 2),
	@ImagePath NVARCHAR(255)
AS
BEGIN
    INSERT INTO [EventDetails_TableForBook] (
        Event_Name, Event_StartDate, Event_EndDate,
        Event_StartTime, Event_EndTime, Event_location,
        Event_Organizer, EventCost_PerPerson, GST, Conv_Fee, Total_Amt,ImagePath)
    VALUES (
        @Event_Name, @Event_StartDate, @Event_EndDate,
        @Event_StartTime, @Event_EndTime, @Event_location,
        @Event_Organizer, @EventCost_PerPerson, @GST, @Conv_Fee, @Total_Amt,@ImagePath)
END


ALTER PROCEDURE [dbo].[sp_event_delete_by_id]
    @Event_Id INT
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM [EventDetails_TableForBook]
    WHERE Event_Id = @Event_Id;
END

ALTER PROCEDURE [dbo].[sp_event_fetch_all]
AS
BEGIN
    SELECT [Event_Id],
           [Event_Name],
           [Event_StartDate],
           [Event_EndDate],
           [Event_StartTime],
           [Event_EndTime],
		   [Event_location],
           [Event_Organizer],
           [EventCost_PerPerson],
           [GST],
           [Conv_Fee],
           [Total_Amt],
		   [ImagePath]
    FROM [AREvent_Project].[dbo].[EventDetails_TableForBook];
END;


ALTER PROCEDURE [dbo].[sp_event_fetch_by_id]
    @Event_Id INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        Event_Id,
        Event_Name,
        Event_StartDate,
        Event_EndDate,
        Event_StartTime,
        Event_EndTime,
        Event_location,
        Event_Organizer,        
        BookedDate,
        EventCost_PerPerson,
        GST,
        Conv_Fee,
        Total_Amt,
		ImagePath
    FROM 
        EventDetails_TableForBook
    WHERE 
        Event_Id = @Event_Id;
END


ALTER PROCEDURE [dbo].[sp_event_fetch_cardData]

AS
BEGIN
    SELECT [Event_Id],
           [Event_Name],
           [Event_StartDate],
           [Event_EndDate],           
           [EventCost_PerPerson],
           [GST],
		   [ImagePath]
    FROM 
        [AREvent_Project].[dbo].[EventDetails_TableForBook];
    
END


  ALTER PROCEDURE [dbo].[sp_event_truncate_all]
AS
BEGIN
    BEGIN TRY
        -- Truncate the table to delete all rows
        TRUNCATE TABLE dbo.EventDetails_TableForBook;

        -- Reset the identity column so that the next inserted row starts at 1 (or any value you prefer)
        DBCC CHECKIDENT ('dbo.EventDetails_TableForBook', RESEED, 1);  -- This will reset the identity to 1

        PRINT 'All events have been deleted successfully and identity reset.';
    END TRY
    BEGIN CATCH
        PRINT 'An error occurred during the truncate operation.';
        -- Optional: You can log the error or rethrow it
        THROW;
    END CATCH
END



ALTER PROCEDURE [dbo].[sp_event_update_by_id]
    @Event_Id INT,
    @Event_Name NVARCHAR(100),
    @Event_StartDate DATE,
    @Event_EndDate DATE,
    @Event_StartTime TIME,
    @Event_EndTime TIME,
    @Event_location NVARCHAR(200),
    @Event_Organizer NVARCHAR(100),
    @EventCost_PerPerson DECIMAL(10, 2),
    @GST DECIMAL(10, 2),
    @Conv_Fee DECIMAL(10, 2),
    @Total_Amt DECIMAL(10, 2),
	 @ImagePath NVARCHAR(255)
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE [EventDetails_TableForBook]
    SET
        Event_Name = @Event_Name,
        Event_StartDate = @Event_StartDate,
        Event_EndDate = @Event_EndDate,
        Event_StartTime = @Event_StartTime,
        Event_EndTime = @Event_EndTime,
        Event_location = @Event_location,
        Event_Organizer = @Event_Organizer,
        EventCost_PerPerson = @EventCost_PerPerson,
        GST = @GST,
        Conv_Fee = @Conv_Fee,
        Total_Amt = @Total_Amt,
		ImagePath = @ImagePath
    WHERE
        Event_Id = @Event_Id;
END


ALTER PROCEDURE [dbo].[sp_events_by_organizer]
    @Organizer NVARCHAR(100),
    @CurrentEventId INT
AS
BEGIN
    SELECT TOP 3 *
    FROM EventDetails_TableForBook
    WHERE Event_Organizer = @Organizer AND Event_Id <> @CurrentEventId
END


ALTER PROCEDURE [dbo].[sp_get_all_booked_events]

AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        [Booking_Id],
        [Event_Id],
        
        [Event_Name],
        [Event_StartDate],
        [Event_EndDate],
        [Event_StartTime],
        [Event_EndTime],
        [Event_location],
        [Event_Organizer],
        [TicketCount],
        [EventCost_PerPerson],
        [GST],
        [Conv_Fee],
        [Total_Amt],
        [BookedDate]
    FROM [AREvent_Project].[dbo].[BookedEvents]
    
    ORDER BY [BookedDate] DESC;
END



 ALTER PROCEDURE [dbo].[sp_GetUserById]
    @UserId INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT UserId, Username, Email,MobileNo, PhotoPath
    FROM Users
    WHERE UserId = @UserId;
END


ALTER PROCEDURE [dbo].[sp_insert_booked_event]
    @Event_Id INT,
    
    @Event_Name VARCHAR(100),
    @Event_StartDate DATE,
    @Event_EndDate DATE,
    @Event_StartTime TIME,
    @Event_EndTime TIME,
    @Event_location VARCHAR(100),
    @Event_Organizer VARCHAR(100),
    @TicketCount INT,
    @EventCost_PerPerson DECIMAL(10, 2),
    @GST DECIMAL(10, 2),
    @Conv_Fee DECIMAL(10, 2),
    @Total_Amt DECIMAL(18, 2)
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO BookedEvents (
        Event_Id,
        
        Event_Name,
        Event_StartDate,
        Event_EndDate,
        Event_StartTime,
        Event_EndTime,
        Event_location,
        Event_Organizer,
        TicketCount,
        EventCost_PerPerson,
        GST,
        Conv_Fee,
        Total_Amt,
        BookedDate
    )
    VALUES (
        @Event_Id,
        
        @Event_Name,
        @Event_StartDate,
        @Event_EndDate,
        @Event_StartTime,
        @Event_EndTime,
        @Event_location,
        @Event_Organizer,
        @TicketCount,
        @EventCost_PerPerson,
        @GST,
        @Conv_Fee,
        @Total_Amt,
        GETDATE()
    );
END



ALTER PROCEDURE [dbo].[sp_LoginUser]
    @Username VARCHAR(100),
    @Email VARCHAR(100),
    @Password VARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;

    -- Return the UserId of the matched user
    SELECT TOP 1 UserId
    FROM Users
    WHERE Username = @Username
      AND Email = @Email
      AND Password = @Password;
END


ALTER PROCEDURE [dbo].[sp_RegisterUser]
    @Username NVARCHAR(100),
    @Email NVARCHAR(150),
    @MobileNo NVARCHAR(15),
    @City NVARCHAR(100),
    @State NVARCHAR(100),
    @Password NVARCHAR(55),
	@PhotoPath NVARCHAR(255)
AS
BEGIN
    INSERT INTO Users (Username, Email, MobileNo, City, State, Password, PhotoPath)
    VALUES (@Username, @Email, @MobileNo, @City, @State, @Password, @PhotoPath);
END


CREATE PROCEDURE sp_get_all_enquiries
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        [EnquiryId],
        [Name],
        [Email],
        [Subject],
        [Message],
        [CreatedAt]
    FROM 
        [AREvent_Project].[dbo].[Enquiries]
    ORDER BY 
        [CreatedAt] DESC; -- optional: orders by latest enquiries first
END;

CREATE PROCEDURE sp_delete_enquiry_by_id
    @EnquiryId INT
AS
BEGIN
    DELETE FROM Enquiries
    WHERE EnquiryId = @EnquiryId
END



- DeleteAllBookedEvents
- DeleteBookedEventsByEventId
- InsertEnquiry
- sp_event_create
- sp_event_delete_by_id
- sp_event_fetch_all
- sp_event_fetch_by_id
- sp_event_fetch_cardData
- sp_event_truncate_all
- sp_event_update_by_id
- sp_events_by_organizer
- sp_get_all_booked_events
- sp_GetUserById
- sp_insert_booked_event
- sp_LoginUser
- sp_RegisterUser


